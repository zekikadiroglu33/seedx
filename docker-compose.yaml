version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-seedx}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - seedx-network

  backend:
    build:
      context: app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-seedx}
      - PYTHONPATH=${PYTHONPATH:-/app}
      - CAMERA_DEVICE=${CAMERA_DEVICE:-0}
      - USE_MOCK_CAMERA=${USE_MOCK_CAMERA:-true}
      - CAMERA_FPS=${CAMERA_FPS:-30}
      - CAMERA_WIDTH=${CAMERA_WIDTH:-640}
      - CAMERA_HEIGHT=${CAMERA_HEIGHT:-480}
      - WEBSOCKET_PING_INTERVAL=${WEBSOCKET_PING_INTERVAL:-20}
      - WEBSOCKET_PING_TIMEOUT=${WEBSOCKET_PING_TIMEOUT:-10}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - seedx-network

  frontend:
    build:
      context: ui
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ./ui:/app
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - seedx-network

volumes:
  postgres_data:

networks:
  seedx-network:
    driver: bridge